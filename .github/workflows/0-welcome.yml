name: Build e Deploy GitHub Pages

on:
  push:
    branches:
      - my-pages # Dispara o workflow quando há push na branch my-pages

# Define permissões para o deploy
permissions:
  contents: read # Permite ler o código do repositório
  pages: write # Permite escrever no repositório de pages (para deploy)
  id-token: write # Permite autenticação com OIDC para o deploy

# Permite apenas um deploy por vez, cancelando outros que chegarem enquanto um está rodando
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Job para construir o site Jekyll
  build:
    runs-on: ubuntu-latest # Roda no sistema operacional Ubuntu mais recente

    steps:
      # Passo 1: Fazer checkout do código do seu repositório
      - name: Checkout do código
        uses: actions/checkout@v4

      # Passo 2: Configurar ambiente Ruby e instalar dependências do Gemfile (se existir)
      # Este passo substitui o antigo 'Instalar dependências do Jekyll'
      # Ele instala as Gems no diretório do usuário ou do Bundler Cache, sem erros de permissão
      - name: Configurar Ruby e instalar dependências
        uses: ruby/setup-ruby@v1 # Usa a Action oficial para Ruby
        with:
          ruby-version: '3.3' # Define uma versão de Ruby compatível (verifique no Gemfile se tiver)
          bundler-cache: true # Instala Gems usando Bundler (requer Gemfile.lock)

      # Remova completamente o passo 'Configurar arquivos iniciais do site' do seu arquivo!
      # Ele sobrescreve _config.yml e index.md incorretamente.

      # Passo 3: Construir o site Jekyll
      - name: Construir site Jekyll
        run: |
          bundle exec jekyll build --destination ./site # Constrói o site na pasta ./site

      # Remova o passo 'Verificar diretório gerado' se ele não for necessário.

      # Passo 4: Fazer upload do site construído como um artefato para o deploy
      - name: Fazer upload do artefato do site
        uses: actions/upload-pages-artifact@v3 # Usa a Action oficial para upload de Pages
        with:
          path: ./site # Envia a pasta onde o site foi construído


  # Job para fazer o deploy do site
  deploy:
    environment:
      name: github-pages # Usa o ambiente especial do GitHub Pages
      url: ${{ steps.deployment.outputs.page_url }} # Pega a URL do site após deploy
    runs-on: ubuntu-latest # Roda no Ubuntu mais recente
    needs: build # Este Job só roda depois que o Job 'build' terminar com sucesso

    steps:
      # Passo 1: Fazer o deploy do artefato construído para o GitHub Pages
      - name: Fazer deploy para GitHub Pages
        id: deployment # ID para pegar a URL de saída
        uses: actions/deploy-pages@v4 # Usa a Action oficial para deploy de Pages
