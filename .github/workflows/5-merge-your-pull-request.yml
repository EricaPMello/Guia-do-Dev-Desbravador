name: Step 5, Merge your pull request
# Comentários explicando o propósito do workflow
# This step triggers after a pull requst is merged to `main`.
# This workflow updates from step 5 to step X.

# Define os gatilhos para o workflow
on:
  workflow_dispatch: # Permite acionamento manual
  push:
    branches:
      - main # Aciona em pushes para a branch main

# Define as permissões para o GITHUB_TOKEN usado pelo workflow
permissions:
  # A action 'skills/action-update-step' provavelmente precisa de permissão de escrita.
  contents: write

# Define os jobs a serem executados
jobs:
  # Job para obter o passo atual do curso
  get_current_step:
    name: Check current step number
    runs-on: ubuntu-latest # Define a máquina virtual para executar o job
    outputs: # Define as saídas que este job produzirá
      current_step: ${{ steps.get_step.outputs.current_step }}
    steps:
      # Passo 1: Fazer checkout do código do repositório
      - name: Checkout
        uses: actions/checkout@v4

      # Passo 2: Ler o arquivo de passo e definir a saída
      - id: get_step # ID para referenciar a saída deste passo
        name: Read step file and set output
        run: |
          # Define o caminho para o arquivo que armazena o número do passo.
          # Verifique se '.github/steps/-step.txt' é o caminho correto no seu projeto.
          STEP_FILE_PATH="./.github/steps/-step.txt"

          # Verifica se o arquivo de passo realmente existe no caminho especificado.
          if [ -f "$STEP_FILE_PATH" ]; then
            # Lê o conteúdo do arquivo, remove quaisquer caracteres de nova linha (\n) ou retorno de carro (\r)
            # usando 'tr -d', e armazena o valor limpo na variável STEP_VALUE.
            STEP_VALUE=$(cat "$STEP_FILE_PATH" | tr -d '\n\r')
            # Imprime o valor lido (após a limpeza) para os logs da Action.
            # Isso é útil para depuração, para ver o que realmente foi lido.
            echo "Valor lido do arquivo de passo (após limpeza): '${STEP_VALUE}'"
            # Define a variável de saída 'current_step' para este passo.
            # Esta saída será acessível por outros jobs que dependem deste.
            echo "current_step=${STEP_VALUE}" >> $GITHUB_OUTPUT
          else
            # Se o arquivo de passo não for encontrado, imprime uma mensagem de erro nos logs.
            echo "ERRO: Arquivo de passo não encontrado em $STEP_FILE_PATH"
            # Define 'current_step' como uma string vazia para evitar erros em jobs dependentes.
            echo "current_step=" >> $GITHUB_OUTPUT
          fi

  # Job que executa as ações do passo 5, como atualizar o README
  on_merge:
    name: On merge
    needs: get_current_step # Este job só roda após 'get_current_step' ser concluído
    # Condição para executar este job:
    # 1. O repositório não é um template (padrão para cursos do GitHub Skills).
    # 2. O passo atual (lido e limpo por 'get_current_step') é '5'.
    if: >-
      ${{ !github.event.repository.is_template
          && needs.get_current_step.outputs.current_step == '5' }} # Comparar como string é mais seguro
    runs-on: ubuntu-latest
    steps:
      # Passo 1: Fazer checkout do código
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Busca todo o histórico de commits, útil para algumas actions.

      # Passo 2: Atualizar o passo de 5 para X usando a action 'skills/action-update-step'
      - name: Update to step X
        uses: skills/action-update-step@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # Token com permissões para modificar o repositório.
          from_step: '5' # O passo de origem (como string).
          to_step: 'X'   # O passo de destino (conclusão, como string).
          # ATENÇÃO: Revise o 'branch_name'. Se o curso instrui a atualizar
          # o README na branch 'main' após a conclusão, mude para 'main'.
          branch_name: my-pages # Revise esta linha se necessário

